'------------------------------------------------------------------------------
' <autogenerated>
'    This code was generated by Measurement Studio.
'    Runtime Version: 15.0.0.49153
'
'    Changes to this file may cause incorrect behavior and will be lost if
'    the code is regenerated.
' <autogenerated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports NationalInstruments
Imports NationalInstruments.DAQmx
Imports NationalInstruments.DAQmx.ComponentModel
Imports System
Imports System.ComponentModel
Imports System.Threading

    ''' <summary>
    ''' Defines a DAQ component that performs continuous input data acquisition
    ''' operations.
    ''' </summary>
    <System.ComponentModel.DesignerCategory("Code")> _
    <ToolboxItem(False)> _
    <DefaultEvent("DataReady")> _
    <TemplateData("StartReadWfmLoopStop", MxbFile:="DaqTask1.mxb")> _
    Partial Class DaqTask1Component
        Inherits ContinuousInputDaqComponent(Of AnalogMultiChannelReader, AnalogWaveform(Of Double)())

        Private Shared ReadOnly EventDataReady As Object = New Object()
        Private Const DefaultNumberOfSamplesToRead As Integer = 100
        Private Shared ReadOnly DefaultTimeout As TimeSpan = TimeSpan.FromMilliseconds(10000)
        
        ''' <summary>
        ''' Initializes a new instance of the component.
        ''' </summary>
        Public Sub New()
            Initialize()
        End Sub

        ''' <summary>
        ''' Initializes a new instance of the component with the specified container.
        ''' </summary>
        Public Sub New(ByVal container As IContainer)
            MyBase.New()

            If (container IsNot Nothing) Then
                container.Add(Me)
            End If
        End Sub

        ''' <summary>
        ''' Creates the underlying DAQ task of the component.
        ''' </summary><returns>
        ''' A DAQ task that represents the DAQ task of the component.
        ''' </returns>
        Protected Overrides Function CreateTask() As Task
            Dim newTask As DaqTask1 = New DaqTask1()
            newTask.Stream.Timeout = Convert.ToInt32(DefaultTimeout.TotalMilliseconds)
            Return newTask
        End Function

        ''' <summary>
        ''' Creates the underlying DAQ reader of the component. Also, initializes the
        ''' AnalogWaveform data for reading.
        ''' </summary><returns>
        ''' The DAQ reader that performs the input data acquisition operations.
        ''' </returns>
        Protected Overrides Function CreateReader() As AnalogMultiChannelReader
            Return New AnalogMultiChannelReader(Task.Stream)
        End Function

        ''' <summary>
        ''' Begins a continuous input data acquisition.
        ''' </summary><param name="callback">
        ''' An asynchronous callback that is called when the read is completed.
        ''' </param><param name="state">
        ''' An object that distinguishes this asynchronous read request from other
        ''' requests.
        ''' </param>
        Protected Overrides Sub BeginReadContinuous(ByVal callback As AsyncCallback, ByVal state As Object)
            Reader.BeginReadWaveform(DefaultNumberOfSamplesToRead, callback, state)
        End Sub

        ''' <summary>
        ''' Ends a continuous input acquisition.
        ''' </summary><param name="result">
        ''' An IAsyncResult that represents an asynchronous call started by
        ''' BeginReadContinuous.
        ''' </param>
        Protected Overrides Sub EndReadContinuous(ByVal result As IAsyncResult)
            Try
                Dim data() As AnalogWaveform(Of Double) = Reader.EndReadWaveform(result)

                Dim args As DaqTask1ComponentDataReadyEventArgs = New DaqTask1ComponentDataReadyEventArgs(data)
                OnDataReady(args)

            Catch ex as DaqException
                ' If you Dispose the component while an asynchronous DAQ operation
                ' is still running, the component may already be disposed or may be in the
                ' process of disposing when this method is called.  Depending on timing, this situation
                ' will result in one of the three errors below.  This is expected behavior.
                '
                ' DaqExceptions are processed by the caller of this method in the
                ' NationalInstruments.DAQmx.ComponentModel class library.  However, by default,
                ' the Visual Studio debugger intercepts these exceptions and breaks
                ' the debugger when they occur.
                '
                ' Because these exceptions do not represent errors, they are caught and safely discarded
                ' here.
                If Not ex.Error = -200088 And Not ex.Error = -88709 And Not ex.Error = -88710 Then
                    Throw
                End If
            End Try

        End Sub

        ''' <summary>
        ''' Raises the DataReady event.
        ''' </summary><param name="e">
        ''' The event arguments of the DataReady event.
        ''' </param>
        Protected Overridable Sub OnDataReady(ByVal e As DaqTask1ComponentDataReadyEventArgs)
            RaiseEvent DataReady(Me, e)
        End Sub

        ''' <summary>
        ''' Occurs when data has been read from a continuous input data acquisition.
        ''' </summary>
        <Category("Action")> _
        <Description("Occurs when data has been read from a continuous input data acquisition.")> _
        Public Custom Event DataReady As EventHandler(Of DaqTask1ComponentDataReadyEventArgs)
            AddHandler(ByVal value As EventHandler(Of DaqTask1ComponentDataReadyEventArgs))
                AddEventHandler(EventDataReady, value)
            End AddHandler

            RemoveHandler(ByVal value As EventHandler(Of DaqTask1ComponentDataReadyEventArgs))
                RemoveEventHandler(EventDataReady, value)
            End RemoveHandler

            RaiseEvent(ByVal sender As Object, ByVal e As DaqTask1ComponentDataReadyEventArgs)
                MyBase.RaiseGenericEventAsync(EventDataReady, e)
            End RaiseEvent
        End Event
    End Class

    ''' <summary>
    ''' Provides data for the DataReady event.
    ''' </summary>
    Public Class DaqTask1ComponentDataReadyEventArgs
        Inherits DataReadyEventArgs(Of AnalogWaveform(Of Double)())

        ''' <summary>
        ''' Initializes a new instance of the DataReady event arguments.
        ''' </summary><param name="data">
        ''' The data that was acquired from a continuous input data acquisition.
        ''' </param>
        Public Sub New(ByVal data As AnalogWaveform(Of Double)())
            MyBase.New(data)
        End Sub
    End Class

    #Region "Timing Compatibility"
    Partial Class DaqTask1Component
        ''' <summary>
        ''' This member supports compatibility with code that is generated with a
        ''' different timing mode and is not intended to be used directly from your code.
        ''' </summary>
        <Browsable(False)> _
        <DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)> _
        <EditorBrowsable(EditorBrowsableState.Never)> _
        <Obsolete("This member supports compatibility with code that is generated with a different timing mode and is not intended to be used directly from your code.")> _
        Public Custom Event ReadCompleted As EventHandler(Of DaqTask1ComponentReadCompletedEventArgs)
            AddHandler(ByVal value As EventHandler(Of DaqTask1ComponentReadCompletedEventArgs))
                Throw New NotSupportedException("This member supports compatibility with code that is generated with a different timing mode and is not intended to be used directly from your code.")
            End AddHandler

            RemoveHandler(ByVal value As EventHandler(Of DaqTask1ComponentReadCompletedEventArgs))
                Throw New NotSupportedException("This member supports compatibility with code that is generated with a different timing mode and is not intended to be used directly from your code.")
            End RemoveHandler

            RaiseEvent(ByVal sender As Object, ByVal e As DaqTask1ComponentReadCompletedEventArgs)
                Throw New NotSupportedException("This member supports compatibility with code that is generated with a different timing mode and is not intended to be used directly from your code.")
            End RaiseEvent
        End Event
    End Class

    ''' <summary>
    ''' This type supports compatibility with code that is generated with a
    ''' different timing mode and is not intended to be used directly from your code.
    ''' </summary>
    <EditorBrowsable(EditorBrowsableState.Never)> _
    Public Class DaqTask1ComponentReadCompletedEventArgs
        Inherits ReadCompletedEventArgs(Of Object)

        ''' <summary>
        ''' This member supports compatibility with code that is generated with a
        ''' different timing mode and is not intended to be used directly from your code.
        ''' </summary>
        Public Sub New(ByVal data As Object)
            MyBase.New(data)

            Throw New NotSupportedException("This member supports compatibility with code that is generated with a different timing mode and is not intended to be used directly from your code.")
        End Sub
    End Class
    #End Region




      
    Public Class DaqTask1
        Inherits Task

        Public Sub New()
            Configure
        End Sub
        
        Public Overridable Sub Configure()
            ' This code was generated by Measurement Studio.  Changes to this 
            ' file may cause incorrect behavior and will be lost if the code 
            ' is regenerated.
            
                AIChannels.CreateVoltageChannel("USB-6343_018D53BA/ai0", "Temp_Front_Gearbox", AITerminalConfiguration.Differential, -40, 179, "SENSOR_01-06")
                AIChannels.CreateVoltageChannel("USB-6343_018D53BA/ai1", "Temp_Front_Heatsink", AITerminalConfiguration.Differential, -40, 179, "SENSOR_01-06")
                AIChannels.CreateVoltageChannel("USB-6343_018D53BA/ai2", "Temp_Rear_Gearbox", AITerminalConfiguration.Differential, -40, 179, "SENSOR_01-06")
                AIChannels.CreateVoltageChannel("USB-6343_018D53BA/ai3", "Temp_Rear_Heatsink", AITerminalConfiguration.Differential, -40, 179, "SENSOR_01-06")
                AIChannels.CreateVoltageChannel("USB-6343_018D53BA/ai4", "Temp_Ambient", AITerminalConfiguration.Differential, 32, 212, "TEMP_AMBIENT")
                AIChannels.CreateVoltageChannel("USB-6343_018D53BA/ai5", "Humidity_Ambient", AITerminalConfiguration.Differential, 0, 100, "HUMIDITY_AMBIENT")
                Timing.ConfigureSampleClock("", 1000, SampleClockActiveEdge.Rising, SampleQuantityMode.ContinuousSamples, 100)

        End Sub
    End Class

